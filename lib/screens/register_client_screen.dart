import 'package:flutter/material.dart';
import '../config/app_routes.dart';
import '../models/client.dart';
import '../services/api_service.dart';
import '../widgets/custom_text_field.dart';
import '../widgets/custom_button.dart';

class RegisterClientScreen extends StatefulWidget {
  @override
  _RegisterClientScreenState createState() => _RegisterClientScreenState();
}

class _RegisterClientScreenState extends State<RegisterClientScreen> {
  final _formKey = GlobalKey<FormState>();
  final ApiService _apiService = ApiService();

  String _nombres = '';
  String _primerApellido = '';
  String _segundoApellido = '';
  String _email = '';
  String _telefono = '';
  String _sexo = '';
  DateTime? _fechaNacimiento;
  String _tipoDocumento = '';
  String _numeroDocumento = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Registrar Cliente')),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              CircleAvatar(
                radius: 50,
                backgroundImage: AssetImage('assets/images/default_avatar.png'),
                child: Stack(
                  children: [
                    Positioned(
                      bottom: 0,
                      right: 0,
                      child: IconButton(
                        icon: Icon(Icons.camera_alt),
                        onPressed: () {
                          // TODO: Implement photo capture/selection
                        },
                      ),
                    ),
                  ],
                ),
              ),
              CustomTextField(
                label: 'Nombres',
                onChanged: (value) => _nombres = value,
              ),
              CustomTextField(
                label: 'Primer Apellido',
                onChanged: (value) => _primerApellido = value,
              ),
              CustomTextField(
                label: 'Segundo Apellido',
                onChanged: (value) => _segundoApellido = value,
              ),
              CustomTextField(
                label: 'Correo Electrónico',
                onChanged: (value) => _email = value,
                keyboardType: TextInputType.emailAddress,
              ),
              CustomTextField(
                label: 'Número de Celular',
                onChanged: (value) => _telefono = value,
                keyboardType: TextInputType.phone,
              ),
              DropdownButtonFormField<String>(
                decoration: InputDecoration(labelText: 'Sexo'),
                items: ['Masculino', 'Femenino', 'Otro']
                    .map((label) => DropdownMenuItem(
                          child: Text(label),
                          value: label,
                        ))
                    .toList(),
                onChanged: (value) => _sexo = value!,
              ),
              CustomTextField(
                label: 'Fecha de Nacimiento',
                onTap: () async {
                  final DateTime? picked = await showDatePicker(
                    context: context,
                    initialDate: DateTime.now(),
                    firstDate: DateTime(1900),
                    lastDate: DateTime.now(),
                  );
                  if (picked != null) {
                    setState(() {
                      _fechaNacimiento = picked;
                    });
                  }
                },
                readOnly: true,
                controller: TextEditingController(
                  text: _fechaNacimiento?.toLocal().toString().split(' ')[0] ?? '',
                ),
              ),
              DropdownButtonFormField<String>(
                decoration: InputDecoration(labelText: 'Tipo de Documento'),
                items: ['DNI', 'Pasaporte', 'Carnet de Extranjería']
                    .map((label) => DropdownMenuItem(
                          child: Text(label),
                          value: label,
                        ))
                    .toList(),
                onChanged: (value) => _tipoDocumento = value!,
              ),
              CustomTextField(
                label: 'Número de Documento',
                onChanged: (value) => _numeroDocumento = value,
              ),
              SizedBox(height: 20),
              CustomButton(
                text: 'Guardar',
                onPressed: _submitForm,
              ),
            ],
          ),
        ),
      ),
    );
  }

  void _submitForm() async {
    if (_formKey.currentState!.validate()) {
      final client = Client(
        id: '', // This will be generated by the backend
        nombres: _nombres,
        primerApellido: _primerApellido,
        segundoApellido: _segundoApellido,
        email: _email,
        telefono: _telefono,
        sexo: _sexo,
        fechaNacimiento: _fechaNacimiento!,
        tipoDocumento: _tipoDocumento,
        numeroDocumento: _numeroDocumento,
        foto: '', // This should be handled separately
      );

      try {
        final registeredClient = await _apiService.registerClient(client);
        Navigator.pushNamed(
          context,
          AppRoutes.confirmationEmail,
          arguments: registeredClient.email,
        );
      } catch (e) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error al registrar: $e')),
        );
      }
    }
  }
}